Discard.cs:
#    3| [Class] Discard
#    5|   5: [Method] M1
#    5|     -1: [TypeMention] Void
#    6|     4: [BlockStmt] {...}
#    7|       0: [LocalVariableDeclStmt] ... ...;
#    7|         0: [LocalVariableDeclAndInitExpr] Func<Int32,Int32,Int32> i = ...
#    7|           -1: [TypeMention] Func<Int32, Int32, Int32>
#    7|             1: [TypeMention] int
#    7|             2: [TypeMention] int
#    7|             3: [TypeMention] int
#    7|           0: [LocalVariableAccess] access to local variable i
#    7|           1: [LambdaExpr] (...) => ...
#-----|             2: (Parameters)
#    7|               0: [Parameter] a
#    7|                 -1: [TypeMention] int
#    7|               1: [Parameter] b
#    7|                 -1: [TypeMention] int
#    7|             4: [IntLiteral] 42
#    8|       1: [ExprStmt] ...;
#    8|         0: [AssignExpr] ... = ...
#    8|           0: [LocalVariableAccess] access to local variable i
#    8|           1: [LambdaExpr] (...) => ...
#-----|             2: (Parameters)
#    8|               0: [Parameter] _
#    8|               1: [Parameter] _`1
#    8|             4: [IntLiteral] 42
#    9|       2: [ExprStmt] ...;
#    9|         0: [AssignExpr] ... = ...
#    9|           0: [LocalVariableAccess] access to local variable i
#    9|           1: [LambdaExpr] (...) => ...
#-----|             2: (Parameters)
#    9|               0: [Parameter] _
#    9|                 -1: [TypeMention] int
#    9|               1: [Parameter] _`1
#    9|                 -1: [TypeMention] int
#    9|             4: [IntLiteral] 42
#   10|       3: [ExprStmt] ...;
#   10|         0: [AssignExpr] ... = ...
#   10|           0: [LocalVariableAccess] access to local variable i
#   10|           1: [AnonymousMethodExpr] delegate(...) { ... }
#-----|             2: (Parameters)
#   10|               0: [Parameter] _
#   10|                 -1: [TypeMention] int
#   10|               1: [Parameter] _`1
#   10|                 -1: [TypeMention] int
#   10|             4: [BlockStmt] {...}
#   10|               0: [ReturnStmt] return ...;
#   10|                 0: [IntLiteral] 0
LambdaModifier.cs:
#    4| [Class] Class1
#    6|   5: [Method] M1
#    6|     -1: [TypeMention] Task
#    7|     4: [BlockStmt] {...}
#    8|       0: [LocalFunctionStmt] m(...)
#    8|         0: [LocalFunction] m
#-----|           2: (Parameters)
#    8|             0: [Parameter] f
#    8|               -1: [TypeMention] Func<Int32, Int32>
#    8|                 1: [TypeMention] int
#    8|                 2: [TypeMention] int
#    8|           4: [BlockStmt] {...}
#   10|       1: [LocalConstantDeclStmt] const ... ...;
#   10|         0: [LocalVariableDeclAndInitExpr] Int32 z = ...
#   10|           -1: [TypeMention] int
#   10|           0: [LocalVariableAccess] access to local variable z
#   10|           1: [IntLiteral] 10
#   11|       2: [ExprStmt] ...;
#   11|         0: [LocalFunctionCall] call to local function m
#   11|           -1: [LocalFunctionAccess] access to local function m
#   11|           0: [LambdaExpr] (...) => ...
#-----|             2: (Parameters)
#   11|               0: [Parameter] x
#   11|             4: [AddExpr] ... + ...
#   11|               0: [ParameterAccess] access to parameter x
#   11|               1: [LocalVariableAccess] access to local variable z
#   12|       3: [ExprStmt] ...;
#   12|         0: [LocalFunctionCall] call to local function m
#   12|           -1: [LocalFunctionAccess] access to local function m
#   12|           0: [LambdaExpr] (...) => ...
#-----|             2: (Parameters)
#   12|               0: [Parameter] x
#   12|             4: [AddExpr] ... + ...
#   12|               0: [ParameterAccess] access to parameter x
#   12|               1: [LocalVariableAccess] access to local variable z
#   13|       4: [ExprStmt] ...;
#   13|         0: [LocalFunctionCall] call to local function m
#   13|           -1: [LocalFunctionAccess] access to local function m
#   13|           0: [AnonymousMethodExpr] delegate(...) { ... }
#-----|             2: (Parameters)
#   13|               0: [Parameter] x
#   13|                 -1: [TypeMention] int
#   13|             4: [BlockStmt] {...}
#   13|               0: [ReturnStmt] return ...;
#   13|                 0: [AddExpr] ... + ...
#   13|                   0: [ParameterAccess] access to parameter x
#   13|                   1: [LocalVariableAccess] access to local variable z
#   15|       5: [ExprStmt] ...;
#   15|         0: [AwaitExpr] await ...
#   15|           0: [MethodCall] call to method Run
#   15|             -1: [TypeAccess] access to type Task
#   15|               0: [TypeMention] Task
#   15|             0: [LambdaExpr] (...) => ...
#   15|               4: [BlockStmt] {...}
#   15|                 0: [ExprStmt] ...;
#   15|                   0: [AwaitExpr] await ...
#   15|                     0: [PropertyCall] access to property CompletedTask
#   15|                       -1: [TypeAccess] access to type Task
#   15|                         0: [TypeMention] Task
LocalFunction.cs:
#    4| [Class] LocalFunction
#    6|   5: [Method] M1
#    6|     -1: [TypeMention] Task
#    7|     4: [BlockStmt] {...}
#    8|       0: [LocalVariableDeclStmt] ... ...;
#    8|         0: [LocalVariableDeclAndInitExpr] Nullable<Int32> i = ...
#    8|           -1: [TypeMention] int?
#    8|             1: [TypeMention] int
#    8|           0: [LocalVariableAccess] access to local variable i
#    8|           1: [CastExpr] (...) ...
#    8|             1: [IntLiteral] 1
#    9|       1: [LocalFunctionStmt] mul(...)
#    9|         0: [LocalFunction] mul
#-----|           2: (Parameters)
#    9|             0: [Parameter] mul
#    9|               -1: [TypeMention] int
#   10|           4: [BlockStmt] {...}
#   11|             0: [ReturnStmt] return ...;
#   11|               0: [MulExpr] ... * ...
#   11|                 0: [CastExpr] (...) ...
#   11|                   1: [ParameterAccess] access to parameter mul
#   11|                 1: [LocalVariableAccess] access to local variable i
#   14|       2: [ExprStmt] ...;
#   14|         0: [AwaitExpr] await ...
#   14|           0: [LocalFunctionCall] call to local function mul
#   14|             -1: [LocalFunctionAccess] access to local function mul
#   14|             0: [IntLiteral] 2
#   16|       3: [LocalFunctionStmt] localExtern(...)
#   16|         0: [LocalFunction] localExtern
#   19|   6: [Method] M2
#   19|     -1: [TypeMention] Void
#   20|     4: [BlockStmt] {...}
#   21|       0: [LocalFunctionStmt] dup(...)
#   21|         0: [LocalFunction] dup
#-----|           0: (Attributes)
#   21|             1: [Attribute] [Obsolete(...)]
#   21|               0: [TypeMention] ObsoleteAttribute
#-----|           2: (Parameters)
#   22|             0: [Parameter] b
#   22|               -1: [TypeMention] bool
#-----|               0: (Attributes)
#   22|                 1: [Attribute] [NotNullWhen(...)]
#   22|                   -1: [TypeMention] NotNullWhenAttribute
#   22|                   0: [BoolLiteral] true
#   22|             1: [Parameter] i
#   22|               -1: [TypeMention] int?
#   22|                 1: [TypeMention] int
#   23|           4: [BlockStmt] {...}
#   24|             0: [ReturnStmt] return ...;
#   24|               0: [MulExpr] ... * ...
#   24|                 0: [CastExpr] (...) ...
#   24|                   1: [IntLiteral] 2
#   24|                 1: [ParameterAccess] access to parameter i
#   27|       1: [ExprStmt] ...;
#   27|         0: [LocalFunctionCall] call to local function dup
#   27|           -1: [LocalFunctionAccess] access to local function dup
#   27|           0: [BoolLiteral] true
#   27|           1: [CastExpr] (...) ...
#   27|             1: [IntLiteral] 42
NativeInt.cs:
#    3| [Class] NativeInt
#    5|   5: [Method] M1
#    5|     -1: [TypeMention] Void
#-----|     2: (Parameters)
#    5|       0: [Parameter] j
#    5|         -1: [TypeMention] int
#    5|       1: [Parameter] k
#    5|         -1: [TypeMention] uint
#    6|     4: [BlockStmt] {...}
#    7|       0: [LocalVariableDeclStmt] ... ...;
#    7|         0: [LocalVariableDeclAndInitExpr] IntPtr x = ...
#    7|           -1: [TypeMention] IntPtr
#    7|           0: [LocalVariableAccess] access to local variable x
#    7|           1: [CastExpr] (...) ...
#    7|             1: [ParameterAccess] access to parameter j
#    8|       1: [LocalVariableDeclStmt] ... ...;
#    8|         0: [LocalVariableDeclAndInitExpr] IntPtr x0 = ...
#    8|           -1: [TypeMention] IntPtr
#    8|           0: [LocalVariableAccess] access to local variable x0
#    8|           1: [CastExpr] (...) ...
#    8|             0: [TypeAccess] access to type IntPtr
#    8|               0: [TypeMention] IntPtr
#    8|             1: [ParameterAccess] access to parameter j
#    9|       2: [LocalVariableDeclStmt] ... ...;
#    9|         0: [LocalVariableDeclAndInitExpr] IntPtr x1 = ...
#    9|           -1: [TypeMention] IntPtr
#    9|           0: [LocalVariableAccess] access to local variable x1
#    9|           1: [CastExpr] (...) ...
#    9|             0: [TypeAccess] access to type IntPtr
#    9|               0: [TypeMention] IntPtr
#    9|             1: [ParameterAccess] access to parameter j
#   10|       3: [LocalVariableDeclStmt] ... ...;
#   10|         0: [LocalVariableDeclAndInitExpr] UIntPtr y = ...
#   10|           -1: [TypeMention] UIntPtr
#   10|           0: [LocalVariableAccess] access to local variable y
#   10|           1: [CastExpr] (...) ...
#   10|             1: [ParameterAccess] access to parameter k
#   12|       4: [LocalConstantDeclStmt] const ... ...;
#   12|         0: [LocalVariableDeclAndInitExpr] IntPtr i = ...
#   12|           -1: [TypeMention] IntPtr
#   12|           0: [LocalVariableAccess] access to local variable i
#   12|           1: [CastExpr] (...) ...
#   12|             0: [TypeAccess] access to type IntPtr
#   12|               0: [TypeMention] IntPtr
#   12|             1: [IntLiteral] 42
#   15|   6: [Method] M2
#   15|     -1: [TypeMention] Void
#   16|     4: [BlockStmt] {...}
#   17|       0: [LocalVariableDeclStmt] ... ...;
#   17|         0: [LocalVariableDeclAndInitExpr] IntPtr x = ...
#   17|           -1: [TypeMention] IntPtr
#   17|           0: [LocalVariableAccess] access to local variable x
#   17|           1: [CastExpr] (...) ...
#   17|             1: [IntLiteral] 3
#   18|       1: [LocalVariableDeclStmt] ... ...;
#   18|         0: [LocalVariableDeclAndInitExpr] Int32 y = ...
#   18|           -1: [TypeMention] int
#   18|           0: [LocalVariableAccess] access to local variable y
#   18|           1: [IntLiteral] 3
#   19|       2: [LocalVariableDeclStmt] ... ...;
#   19|         0: [LocalVariableDeclAndInitExpr] Int64 v = ...
#   19|           -1: [TypeMention] long
#   19|           0: [LocalVariableAccess] access to local variable v
#   19|           1: [CastExpr] (...) ...
#   19|             1: [IntLiteral] 10
#   21|       3: [LocalVariableDeclStmt] ... ...;
#   21|         0: [LocalVariableDeclAndInitExpr] Type test3 = ...
#   21|           -1: [TypeMention] Type
#   21|           0: [LocalVariableAccess] access to local variable test3
#   21|           1: [TypeofExpr] typeof(...)
#   21|             0: [TypeAccess] access to type IntPtr
#   21|               0: [TypeMention] IntPtr
#   22|       4: [LocalVariableDeclStmt] ... ...;
#   22|         0: [LocalVariableDeclAndInitExpr] Type test4 = ...
#   22|           -1: [TypeMention] Type
#   22|           0: [LocalVariableAccess] access to local variable test4
#   22|           1: [TypeofExpr] typeof(...)
#   22|             0: [TypeAccess] access to type UIntPtr
#   22|               0: [TypeMention] UIntPtr
#   23|       5: [LocalVariableDeclStmt] ... ...;
#   23|         0: [LocalVariableDeclAndInitExpr] Type test5 = ...
#   23|           -1: [TypeMention] Type
#   23|           0: [LocalVariableAccess] access to local variable test5
#   23|           1: [MethodCall] call to method GetType
#   23|             -1: [AddExpr] ... + ...
#   23|               0: [LocalVariableAccess] access to local variable x
#   23|               1: [CastExpr] (...) ...
#   23|                 1: [IntLiteral] 1
#   24|       6: [LocalVariableDeclStmt] ... ...;
#   24|         0: [LocalVariableDeclAndInitExpr] Type test6 = ...
#   24|           -1: [TypeMention] Type
#   24|           0: [LocalVariableAccess] access to local variable test6
#   24|           1: [MethodCall] call to method GetType
#   24|             -1: [AddExpr] ... + ...
#   24|               0: [LocalVariableAccess] access to local variable x
#   24|               1: [CastExpr] (...) ...
#   24|                 1: [LocalVariableAccess] access to local variable y
#   25|       7: [LocalVariableDeclStmt] ... ...;
#   25|         0: [LocalVariableDeclAndInitExpr] Type test7 = ...
#   25|           -1: [TypeMention] Type
#   25|           0: [LocalVariableAccess] access to local variable test7
#   25|           1: [MethodCall] call to method GetType
#   25|             -1: [AddExpr] ... + ...
#   25|               0: [CastExpr] (...) ...
#   25|                 1: [LocalVariableAccess] access to local variable x
#   25|               1: [LocalVariableAccess] access to local variable v
ParenthesizedPattern.cs:
#    3| [Class] T
#    5| [Class] ParenthesizedPattern
#    7|   5: [Method] M1
#    7|     -1: [TypeMention] Void
#-----|     2: (Parameters)
#    7|       0: [Parameter] o
#    7|         -1: [TypeMention] object
#    8|     4: [BlockStmt] {...}
#    9|       0: [IfStmt] if (...) ...
#    9|         0: [IsExpr] ... is ...
#    9|           0: [ParameterAccess] access to parameter o
#    9|           1: [RecursivePatternExpr] { ... }
#    9|             0: [LocalVariableDeclExpr] Object p1
#    9|             3: [PropertyPatternExpr] { ... }
#   10|         1: [BlockStmt] {...}
#   13|       1: [IfStmt] if (...) ...
#   13|         0: [IsExpr] ... is ...
#   13|           0: [ParameterAccess] access to parameter o
#   13|           1: [RecursivePatternExpr] { ... }
#   13|             0: [LocalVariableDeclExpr] Object p2
#   13|             3: [PropertyPatternExpr] { ... }
#   14|         1: [BlockStmt] {...}
#   19|   6: [Method] M2
#   19|     -1: [TypeMention] Void
#-----|     2: (Parameters)
#   19|       0: [Parameter] o
#   19|         -1: [TypeMention] object
#   20|     4: [BlockStmt] {...}
#   21|       0: [LocalVariableDeclStmt] ... ...;
#   21|         0: [LocalVariableDeclAndInitExpr] Int32 r = ...
#   21|           -1: [TypeMention] int
#   21|           0: [LocalVariableAccess] access to local variable r
#   21|           1: [SwitchExpr] ... switch { ... }
#   21|             -1: [ParameterAccess] access to parameter o
#   23|             0: [SwitchCaseExpr] ... => ...
#   23|               0: [ConstantPatternExpr,IntLiteral] 1
#   23|               2: [IntLiteral] 1
#   24|             1: [SwitchCaseExpr] ... => ...
#   24|               0: [ConstantPatternExpr,IntLiteral] 2
#   24|               2: [IntLiteral] 2
#   25|             2: [SwitchCaseExpr] ... => ...
#   25|               0: [VariablePatternExpr] T t
#   25|                 0: [TypeMention] T
#   25|               1: [IsExpr] ... is ...
#   25|                 0: [LocalVariableAccess] access to local variable t
#   25|                 1: [RecursivePatternExpr] { ... }
#   25|                   3: [PropertyPatternExpr] { ... }
#   25|               2: [IntLiteral] 3
#   26|             3: [SwitchCaseExpr] ... => ...
#   26|               0: [VariablePatternExpr] Object o1
#   26|                 0: [TypeMention] object
#   26|               1: [IsExpr] ... is ...
#   26|                 0: [LocalVariableAccess] access to local variable o1
#   26|                 1: [RecursivePatternExpr] { ... }
#   26|                   3: [PropertyPatternExpr] { ... }
#   26|               2: [IntLiteral] 4
#   27|             4: [SwitchCaseExpr] ... => ...
#   27|               0: [TypeAccessPatternExpr] access to type String
#   27|                 0: [TypeMention] string
#   27|               2: [IntLiteral] 5
TypeParameterNullability.cs:
#    1| [Interface] I1
#    3| [Class] A2
#    5|   5: [Method] F1
#    5|     -1: [TypeMention] Void
#-----|     1: (Type parameters)
#    5|       0: [TypeParameter] T
#-----|     2: (Parameters)
#    5|       0: [Parameter] t
#    5|     4: [BlockStmt] {...}
#    6|   6: [Method] F2
#    6|     -1: [TypeMention] Void
#-----|     1: (Type parameters)
#    6|       0: [TypeParameter] T
#-----|     2: (Parameters)
#    6|       0: [Parameter] t
#    6|         -1: [TypeMention] T?
#    6|           1: [TypeMention] T
#    6|     4: [BlockStmt] {...}
#    7|   7: [Method] F3
#    7|     -1: [TypeMention] Void
#-----|     1: (Type parameters)
#    7|       0: [TypeParameter] T
#-----|     2: (Parameters)
#    7|       0: [Parameter] t
#    7|     4: [BlockStmt] {...}
#    8|   8: [Method] F4
#    8|     -1: [TypeMention] Void
#-----|     1: (Type parameters)
#    8|       0: [TypeParameter] T
#-----|     2: (Parameters)
#    8|       0: [Parameter] t
#    8|     4: [BlockStmt] {...}
#    9|   9: [Method] F5
#    9|     -1: [TypeMention] Void
#-----|     1: (Type parameters)
#    9|       0: [TypeParameter] T
#-----|     2: (Parameters)
#    9|       0: [Parameter] t
#    9|     4: [BlockStmt] {...}
#   10|   10: [Method] F6
#   10|     -1: [TypeMention] Void
#-----|     1: (Type parameters)
#   10|       0: [TypeParameter] T
#-----|     2: (Parameters)
#   10|       0: [Parameter] t
#   10|         -1: [TypeMention] T?
#   10|           1: [TypeMention] T
#   10|     4: [BlockStmt] {...}
#   13| [Class] B2
#-----|   3: (Base types)
#   13|     0: [TypeMention] A2
#   15|   5: [Method] F1
#   15|     -1: [TypeMention] Void
#-----|     1: (Type parameters)
#   15|       0: [TypeParameter] T
#-----|     2: (Parameters)
#   15|       0: [Parameter] t
#   15|     4: [BlockStmt] {...}
#   16|   6: [Method] F2
#   16|     -1: [TypeMention] Void
#-----|     1: (Type parameters)
#   16|       0: [TypeParameter] T
#-----|     2: (Parameters)
#   16|       0: [Parameter] t
#   16|         -1: [TypeMention] T?
#   16|           1: [TypeMention] T
#   16|     4: [BlockStmt] {...}
#   17|   7: [Method] F3
#   17|     -1: [TypeMention] Void
#-----|     1: (Type parameters)
#   17|       0: [TypeParameter] T
#-----|     2: (Parameters)
#   17|       0: [Parameter] t
#   17|     4: [BlockStmt] {...}
#   18|   8: [Method] F4
#   18|     -1: [TypeMention] Void
#-----|     1: (Type parameters)
#   18|       0: [TypeParameter] T
#-----|     2: (Parameters)
#   18|       0: [Parameter] t
#   18|     4: [BlockStmt] {...}
#   19|   9: [Method] F6
#   19|     -1: [TypeMention] Void
#-----|     1: (Type parameters)
#   19|       0: [TypeParameter] T
#-----|     2: (Parameters)
#   19|       0: [Parameter] t
#   19|         -1: [TypeMention] T?
#   19|           1: [TypeMention] T
#   19|     4: [BlockStmt] {...}
#   22| [Class] B3
#-----|   3: (Base types)
#   22|     0: [TypeMention] A2
#   24|   5: [Method] F2
#   24|     -1: [TypeMention] Void
#-----|     1: (Type parameters)
#   24|       0: [TypeParameter] T
#-----|     2: (Parameters)
#   24|       0: [Parameter] t
#   24|         -1: [TypeMention] T?
#   24|           1: [TypeMention] T
#   24|     4: [BlockStmt] {...}
TypePattern.cs:
#    3| [Class] TypePattern
#    5|   5: [Method] M1
#    5|     -1: [TypeMention] object
#-----|     2: (Parameters)
#    5|       0: [Parameter] o1
#    5|         -1: [TypeMention] object
#    5|       1: [Parameter] o2
#    5|         -1: [TypeMention] object
#    6|     4: [BlockStmt] {...}
#    7|       0: [LocalVariableDeclStmt] ... ...;
#    7|         0: [LocalVariableDeclAndInitExpr] (Object,Object) t = ...
#    7|           -1: [TypeMention] (object, object)
#    7|           0: [LocalVariableAccess] access to local variable t
#    7|           1: [TupleExpr] (..., ...)
#    7|             0: [ParameterAccess] access to parameter o1
#    7|             1: [ParameterAccess] access to parameter o2
#    8|       1: [IfStmt] if (...) ...
#    8|         0: [IsExpr] ... is ...
#    8|           0: [LocalVariableAccess] access to local variable t
#    8|           1: [RecursivePatternExpr] { ... }
#    8|             2: [PositionalPatternExpr] ( ... )
#    8|               0: [TypeAccessPatternExpr] access to type Int32
#    8|                 0: [TypeMention] int
#    8|               1: [TypeAccessPatternExpr] access to type String
#    8|                 0: [TypeMention] string
#    8|         1: [BlockStmt] {...}
#    9|       2: [ReturnStmt] return ...;
#    9|         0: [SwitchExpr] ... switch { ... }
#    9|           -1: [ParameterAccess] access to parameter o1
#   11|           0: [SwitchCaseExpr] ... => ...
#   11|             0: [TypeAccessPatternExpr] access to type Int32
#   11|               0: [TypeMention] int
#   11|             2: [CastExpr] (...) ...
#   11|               1: [IntLiteral] 1
#   12|           1: [SwitchCaseExpr] ... => ...
#   12|             0: [VariablePatternExpr] Double d
#   12|               0: [TypeMention] double
#   12|             2: [CastExpr] (...) ...
#   12|               1: [LocalVariableAccess] access to local variable d
#   13|           2: [SwitchCaseExpr] ... => ...
#   13|             0: [TypeAccessPatternExpr] access to type String
#   13|               0: [TypeMention] string
#   13|             2: [CastExpr] (...) ...
#   13|               1: [IntLiteral] 3
#   14|           3: [SwitchCaseExpr] ... => ...
#   14|             0: [VariablePatternExpr] Object o
#   14|               0: [TypeMention] object
#   14|             2: [LocalVariableAccess] access to local variable o
